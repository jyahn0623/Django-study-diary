2.4
# URLconf
메인의 urls와 앱의 urls를 구분하여 코딩하는 것이 좋다!

urls에서 뷰를 호출하기 때문에, 뷰 관련 클래스를 import 해야 한다!!
path()의 인자는 5개가 있지만, 주로 3개만 사용한다.
-> path('bookmark/', BookmarkLV.as_view(), name='index') // bookmark/ 요청을 처리할 뷰 클래스를 BookmarkLV로 지정한고, 이름을 index로 한다.

include() 함수는 URLconf 작성 시 다른 곳에서 정의한 URLconf를 가져와서 재활용 할 때 사용하는 함수, 다만 admin 사이트에 대한 URLconf인 
admin.stie.urls를 재활용할 때는 include()를 사용하지 않아도 가능하다.

View가 간단한 경우, views.py에 코딩할 필요 없이, URLconf에서 뷰 및 뷰 처리에 필요한 파라미터를 지정할 수 있지만, MTV 원칙에 의해
따로 코딩하는 것이 좋다.

2.5
# 뷰
클래스형 뷰를 코딩할 때 가장 먼저 고려해야 할 사항은 어떤 제네릭 뷰를 사용할 것인지이다.
ex) ListView, DeatilView
from django.views.generic import ListView, DetailView // django.views.generic을 import 해주어야 한다.
from bookmark.models import bookmark // 테이블 조회를 위해 모델을 임포트

장고에선 제네릭 뷰 사용 시 디폴트로 알아서 지정해주는 2가지 속성이 있다.
컨텍스트 변수와 템플릿 파일인데, 
1. ListView의 경우 컨텍스트 변수에 object_list를 사용하고, 템플릿 파일에 모델명소문자_list.html로 지정한다. 즉, object_list를 템플릿에 넘겨준다
2. DetailView의 경우 컨텍스트 변수에 object를 사용하고, 템플릿 파일에 모델명소문자_detail.html로 지정한다. 즉, object를 템플릿에 넘겨준다.

 {% for bk in object_list %}     // object_list의 경우 ListView를 상속 받은 뷰에서 넘겨주는 파라미터.
       <li><a href="{% url 'detail' bookmark.id %}">{{ bookmark }}</a></li> 
       // {{ bookmark }}은 템플릿 변수이다,
       즉, Bookmark 테이블의 특정 레코드 하나를 의미한다. 즉, 특정 Bookmark 객체를 의미하고 객체를 출력하면 __str()__에 의해서
       __str()__ 결과를 출력한다. -> models.py에서 __str()__을 정의할 때 return self.title로 했기 때문에 title을 출력하는 것이다.
       모든 리스트들의 title을 화면에 뽑아준다.
       return "%s %s %(self.title, self.url)"로 하게 되면, title과 url이 둘 다 출력이 되겠다.
       
       // {% url 'detail' bookmark.id %}
       -> a href에 의해 해당 텍스트를 클릭하게 되면, 'detail' URL 패턴(/bookmark/1/)으로 웹 요청을 보낸다.
       {% url %} 태그는 URL 패턴에서 URL 문자열을 추출하는 역할, *bookmark.id에서 id는 list로 받아오기 때문에, 리스트의 번호인 것 같다.
       'detail'은 뭘 의미할까? path('bookmark/<int:pk>', BookmarkDV.as_view(), name='detail'), path에서 name이 datail이기 때문에,
       해당 리스트의 번호를 name이 detail인 path에 bk.id를 넘겨준다. bookmark/bk.id은 bookmark/3의 형태가 되는 것 
       ※ name이 detail인 path에 넘겨주는 것은 아니다!! 확인해 본 결과 DetailView의 속성 값인 듯.
       
       <a href="{% url 'detail' bk.id %}"> == <a href="{/bookmark/{{bk.id}}"> (하드코딩의 예)
       
 {% endfor %}
